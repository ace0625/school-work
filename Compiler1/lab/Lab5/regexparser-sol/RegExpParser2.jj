//-- Define a program that consumes tokens: ----------------------------------

PARSER_BEGIN(RegExpParser2)

public class RegExpParser2 {
  public static void main(String args[]) throws ParseException {
      new RegExpParser2(System.in);  // Read from standard input
      Top();
      System.out.println("Input syntax is valid");
  }
}

PARSER_END(RegExpParser2)

//-- Define the grammatical rules of the input language: ---------------------

void Top() : { } {
  R() <EOF>
}

void R() : { } {
   Seq() ("|" R())?
}


void Seq() : { } {
   Rep() (Seq())?
}

void Rep() : { } {
   Atom() ( "*" ) *
}

void Atom() : { } {
  "%"
| <LETTER>
| "(" R() ")"
}

//-- Define the lexical structure of an input language: ----------------------

// Input elements that should be ignored/skipped:
SKIP : { " " | "\t" | "\n" | "\r" }

// Lexemes that should be reported as valid tokens:
TOKEN : {
 <LETTER : ["a"-"z"]>
}

